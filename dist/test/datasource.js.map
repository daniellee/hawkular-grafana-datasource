{"version":3,"sources":["../../src/datasource.js"],"names":["HawkularDatasource","instanceSettings","$q","backendSrv","templateSrv","type","url","name","tenant","jsonData","token","q","variables","capabilitiesPromise","queryVersion","then","version","queryProcessor","createHeaders","options","validTargets","targets","filter","target","hide","queryBy","tags","length","when","data","promises","map","run","all","flatten","concat","apply","responses","headers","Authorization","datasourceRequest","method","response","status","message","title","result","text","metric","id","value","key","hasOwnProperty","query","params","undefined","substr","findTags","trim","charAt","pattern","flatTags","property","tag","catch"],"mappings":"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","file":"datasource.js","sourcesContent":["import _ from \"lodash\";\nimport {Variables} from './variables';\nimport {Capabilities} from './capabilities';\nimport {QueryProcessor} from './queryProcessor';\n\nexport class HawkularDatasource {\n\n  constructor(instanceSettings, $q, backendSrv, templateSrv) {\n    this.type = instanceSettings.type;\n    this.url = instanceSettings.url;\n    this.name = instanceSettings.name;\n    this.tenant = instanceSettings.jsonData.tenant;\n    this.token = instanceSettings.jsonData.token;\n    this.q = $q;\n    this.backendSrv = backendSrv;\n    let variables = new Variables(templateSrv);\n    this.capabilitiesPromise = this.queryVersion()\n      .then(version => new Capabilities(version));\n    this.queryProcessor = new QueryProcessor($q, backendSrv, variables, this.capabilitiesPromise, this.url, this.createHeaders());\n  }\n\n  query(options) {\n    let validTargets = options.targets\n      .filter(target => !target.hide)\n      .filter(target => (target.queryBy === 'tags' && target.tags.length > 0) || target.target !== 'select metric');\n\n    if (validTargets.length === 0) {\n      return this.q.when({data: []});\n    }\n\n    let promises = validTargets.map(target => {\n      return this.queryProcessor.run(target, options);\n    });\n\n    return this.q.all(promises).then(responses => {\n      let flatten = [].concat.apply([], responses);\n      return {data: flatten};\n    });\n  }\n\n  createHeaders() {\n    var headers = {\n      'Content-Type': 'application/json',\n      'Hawkular-Tenant': this.tenant\n    };\n    if (typeof this.token === 'string' && this.token.length > 0) {\n      headers.Authorization = 'Bearer ' + this.token;\n    }\n    return headers;\n  }\n\n  testDatasource() {\n    return this.backendSrv.datasourceRequest({\n      url: this.url + '/status',\n      method: 'GET'\n    }).then(response => {\n      if (response.status === 200) {\n        return { status: \"success\", message: \"Data source is working\", title: \"Success\" };\n      }\n    });\n  }\n\n  annotationQuery(options) {\n    return this.backendSrv.datasourceRequest({\n      url: this.url + '/annotations',\n      method: 'POST',\n      data: options\n    }).then(result => {\n      return result.data;\n    });\n  }\n\n  suggestQueries(target) {\n    return this.backendSrv.datasourceRequest({\n      url: this.url + '/metrics?type=' + target.type,\n      method: 'GET',\n      headers: this.createHeaders()\n    }).then(result => {\n      return _.map(result.data, metric => {\n        return {text: metric.id, value: metric.id};\n      });\n    });\n  }\n\n  suggestTags(type, key) {\n    if (!key) {\n      // Need at least some characters typed in order to suggest something\n      return this.q.when([]);\n    }\n    return this.backendSrv.datasourceRequest({\n      url: this.url + '/' + type + 's/tags/' + key + ':*',\n      method: 'GET',\n      headers: this.createHeaders()\n    }).then(result => {\n      if (result.data.hasOwnProperty(key)) {\n        return [' *'].concat(result.data[key]).map(value => {\n          return {text: value, value: value};\n        });\n      }\n      return [];\n    });\n  }\n\n  metricFindQuery(query) {\n    var params = \"\";\n    if (query !== undefined) {\n      if (query.substr(0, 5) === \"tags/\") {\n        return this.findTags(query.substr(5).trim());\n      }\n      if (query.charAt(0) === '?') {\n        params = query;\n      } else {\n        params = \"?\" + query;\n      }\n    }\n    return this.backendSrv.datasourceRequest({\n      url: this.url + '/metrics' + params,\n      method: 'GET',\n      headers: this.createHeaders()\n    }).then(result => {\n      return _.map(result.data, metric => {\n        return {text: metric.id, value: metric.id};\n      });\n    });\n  }\n\n  findTags(pattern) {\n    return this.backendSrv.datasourceRequest({\n      url: this.url + '/metrics/tags/' + pattern,\n      method: 'GET',\n      headers: this.createHeaders()\n    }).then(result => {\n      var flatTags = [];\n      if (result.data) {\n        var data = result.data;\n        for (var property in data) {\n          if (data.hasOwnProperty(property)) {\n            flatTags = flatTags.concat(data[property]);\n          }\n        }\n      }\n      return flatTags.map(tag => {\n        return {text: tag, value: tag};\n      });\n    });\n  }\n\n  queryVersion() {\n    return this.backendSrv.datasourceRequest({\n      url: this.url + '/status',\n      method: 'GET',\n      headers: {'Content-Type': 'application/json'}\n    }).then(response => response.data['Implementation-Version'])\n    .catch(response => \"Unknown\");\n  }\n\n  getCapabilities() {\n    return this.capabilitiesPromise;\n  }\n}\n"]}